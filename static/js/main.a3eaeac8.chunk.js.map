{"version":3,"sources":["components/Footer.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","className","Navbar","href","title","type","id","mode","onClick","togglemode","role","htmlFor","TextForm","useState","text","setText","heading","value","rows","onChange","event","target","newText","toUpperCase","toLowerCase","split","join","copyText","document","getElementById","select","navigator","clipboard","writeText","length","style","color","backgroundColor","fontWeight","fontSize","alert","prototypes","PropTypes","string","aboutText","App","setMode","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a3eaeac8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <div className='footer'>\r\n      <p className='d-flex align-items-center justify-content-center text-white bg-black'>\r\n        &#169;Done by harsha datta\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport default function Navbar (props) {\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-dark bg-black '>\r\n      <div className='container-fluid'>\r\n        <a className='navbar-brand' href='/'>\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-bs-toggle='collapse'\r\n          data-bs-target='#navbarSupportedContent'\r\n          aria-controls='navbarSupportedContent'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'\r\n        >\r\n          <span className='navbar-toggler-icon' />\r\n        </button>\r\n        <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n          <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n            {/* <li className='nav-item'>\r\n              <a className='nav-link active' aria-current='page' href='/'>\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <a className='nav-link' href='/'>\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <div\r\n            className={`form-check form-switch text-${props.mode === 'light'\r\n              ? 'dark'\r\n              : 'light'}`}\r\n          >\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              onClick={props.togglemode}\r\n              role='switch'\r\n              id='flexSwitchCheckDefault'\r\n            />\r\n            <label\r\n              className='form-check-label text-white'\r\n              htmlFor='flexSwitchCheckDefault'\r\n            >\r\n              Enable {props.mode === 'light' ? 'dark' : 'light'} Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.prototypes = { title: PropTypes.string, aboutText: PropTypes.string }\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\tconst [text, setText] = useState(\"\");\r\n\t\r\n\tconst handleUpClick = () => {\r\n\t\t// console.log(\"Uppercase was Clicked\", text);\r\n\t\tlet newText = text.toUpperCase();\r\n\r\n\t\tsetText(newText);\r\n\t};\r\n\tconst handleLoClick = () => {\r\n\t\t// console.log(\"Uppercase was Clicked\", text);\r\n\t\tlet newText = text.toLowerCase();\r\n\r\n\t\tsetText(newText);\r\n\t};\r\n\tconst handleClear = () => {\r\n    //   console.log(\"You have clicked on clear\");\r\n    if(text !== '')\r\n    {\r\n      let cleartext = \"\";\r\n      setText(cleartext);\r\n      \r\n    }\r\n  }\r\n  \tconst handlecopyfunction = () => {\r\n    if(text !== '')\r\n    {\r\n      var copyText = document.getElementById(\"text\");\r\n      copyText.select();\r\n      navigator.clipboard.writeText(copyText.value);\r\n      \r\n    }\r\n  }\r\n  const handleOnChangeAlert = () => {\r\n      alert(\"Cannot edit in preview\");\r\n  }\r\n\tconst handleOnChange = (event) => {\r\n\t\t// console.log(\"On change\");\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\r\n\tconst handleExtraspaces = () => {\r\n    if(text !== '')\r\n    {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n     \r\n    }\r\n    \r\n  }\r\n\r\n\r\n\tlet  styledark = {\r\n    color: '#fff',\r\n    backgroundColor:'#3A3B3C',\r\n    fontWeight: '400',\r\n    fontSize:'20px'\r\n  }\r\n\r\n  let stylelight = {\r\n    color: '#000',\r\n    backgroundColor:'#fff',\r\n    fontWeight: '400',\r\n    fontSize:'18px'\r\n  }\r\n\r\n  let style2dark = {\r\n    color: '#fff'\r\n  }\r\n\r\n  let style2light = {\r\n    color:'#000'\r\n  }\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1>{props.heading}</h1>\r\n\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tid=\"myBox\"\r\n\t\t\t\t\t\trows=\"8\"\r\n\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n\t\t\t\t\tConvert to uppercase\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n\t\t\t\t\tConvert to lowercase\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-primary mx-2\" onClick={handleExtraspaces}>\r\n\t\t\t\t\tRemove Extra spaces\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-success mx-2\" onClick={handlecopyfunction}>\r\n\t\t\t\t\tCopy\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-danger mx-2\" onClick={handleClear}>\r\n\t\t\t\t\tClear\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container my-2\">\r\n\t\t\t\t<h1>Your Text summary</h1>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{text.split(\" \").length} words, {text.length} characters{\" \"}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n\t\t\t\t<h2 >Preview</h2>\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tid=\"text\"\r\n\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tstyle={props.mode==='dark'?styledark:stylelight}\r\n\t\t\t\t\tonChange={handleOnChangeAlert}\r\n\t\t\t\t></textarea>\r\n        </div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","// import logo from './logo.svg';\nimport React,{useState} from \"react\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\"\n\nfunction App(props) {\n\tconst [mode,setMode] = useState(\"light\");\n\t\n\n \n\n    /* Auto dismissing the alert after some time : */\n\n    \n\tconst togglemode = () => {\n\tif (mode === \"dark\") {\n\t\tsetMode(\"light\");\n\t\tdocument.body.style.background =\n\t\t\t\"linear-gradient(45deg, rgb(255, 255, 255, 1) 50%, rgb(255, 255, 255, 1) 50%)\";\n\t\t\tdocument.body.style.color=\"black\"\n\t\t\n\t\t// document.title = \"TextUtils - Light Mode\";\n\t} else {\n\t\tsetMode(\"dark\");\n\t\tdocument.body.style.background =\n\t\t\t\"linear-gradient(45deg, rgb(27, 27, 27) 50%, rgb(27, 27, 27) 50%)\";\n\t\tdocument.body.style.color=\"white\"\n\t\t\n\t\t}\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} togglemode={togglemode}/>\n\t\t\t<div className=\"container my-3\">\n\t\t\t\t<TextForm heading=\"Enter the text to analyze\" />\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t\t\n\t\t\n\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}